WSK-War Machine
===============
轻量级混合前端工程模板

> 项目名称命名规则参阅 [*项目名称命名规则 & 描述*](http://baike.baidu.com/item/%E5%A4%8D%E4%BB%87%E8%80%85%E8%81%94%E7%9B%9F%EF%BC%9A%E5%A5%A5%E5%88%9B%E6%97%B6%E4%BB%A3 '点击 · Click')

> [*演示*]( '点击 · Click')



帮助 WSK-War Machine
--------------------
***你不一定会在这儿找到令你惊讶的东西，但是我们需要你的热情！^_^***

#### WSK-War Machine 接下来要扩展实现些什么?

* 查看我们的动态（[Github]( '点击查看'), [Trello]( '点击查看')）。

#### 发现BUG!!!

如果你发现一些总是出现的问题，无论是在访问网站时发现，亦或是在查看我们的代码时发现，可以在 [Github Issues]( '点击查看') 上查看、提出问题，并与我们展开讨论。后期我们的测试人员会尽快把相关 `BUG` 定义、指定流程等发布至 [Github Wiki]( '点击查看') 之下。

#### 我想帮忙一起写代码!!!

那真的是太棒了！！！后期我们会尽快将各种协作方式更新上来！

#### 我有一个想法，但是我不懂如何去编写程序!!!

如果你在功能上或者其他方面有些自己的想法，请查阅我们在 [Trello]( '点击查看') 上的面板是否已经存在相关的卡片。如果你的想法非常棒，面板上却没有相关明确内容，我们会通知你并将你的提议加入我们的功能储备，并尽可能去实现它！



主要开发规范
-----------

+ [*HTML 指南*]( '点击 · Click')

+ [*Jade 指南*]( '点击 · Click')

+ [*CSS 指南*]( '点击 · Click')

+ [*Sass 指南*]( '点击 · Click')

+ [*JavaScript 指南*]( '点击 · Click')

+ [*CoffeeScript 指南*]( '点击 · Click')

+ [*工程模板指南*]( '点击 · Click')



主要开发依赖
-----------

+ [*Git*](http://git-scm.com/ '点击 · Click')

+ [*Node.js*](http://nodejs.org/ '点击 · Click')

+ [*Gulp.js*](http://gulpjs.com/ '点击 · Click')

+ [*UglifyJS 2*](http://lisperator.net/uglifyjs/ '点击 · Click')

+ [*Jade*](http://jade-lang.com/ '点击 · Click')

+ [*Sass*](http://sass-lang.com/ '点击 · Click')

+ [*CoffeeScript*](http://coffeescript.org/ '点击 · Click')

> 顺序安装；所有依赖均安装在全局环境下。

####Git

整个项目使用 [*Git*](http://git-scm.com/ '点击 · Click') 进行版本控制，并托管在 [*Github*](https://github.com/ '点击 · Click') 上。你可以通过下述命令检查 [*Git*](http://git-scm.com/ '点击 · Click') 在你的电脑上是否被安装成功：

```bash
git --version
```

####Node

整个项目中的很多构建任务基于 [*Node.js*](http://nodejs.org/ '点击 · Click') 运行。你可以通过下述命令检查 [*Node.js*](http://nodejs.org/ '点击 · Click') 在你的电脑上是否被安装成功：

```bash
node --version
```

####Gulp.js

项目中的所有构建任务目前完全使用 [*Gulp.js*](http://gulpjs.com/ '点击 · Click') 。你可以通过下述命令检查 [*Gulp.js*](http://gulpjs.com/ '点击 · Click') 在你的电脑上是否被安装成功：

```bash
gulp --version
```

####UglifyJS 2

项目中的所有构建任务目前完全使用 [*UglifyJS 2*](http://lisperator.net/uglifyjs/ '点击 · Click') 。你可以通过下述命令检查 [*UglifyJS 2*](http://lisperator.net/uglifyjs/ '点击 · Click') 在你的电脑上是否被安装成功：

```bash
uglifyjs --version
```



主要构建任务
-----------

+ 在 `WEB` 容器内实时开发；

+ 使用 `Jade` 预处理 `HTML`；

+ 压缩 `HTML` 超文本标记文件；

+ 使用 `Sass` 预处理 `CSS`；

+ 压缩 `CSS` 样式表文件；

+ 使用 `CSSO` 优化 `CSS`;

+ 使用 `UNCSS` 移除页面相关样式表内未应用的 `CSS` 内容（选择器）;

+ 使用 `CoffeeScript` 预处理 `JavaScript`；

+ 压缩 `JavaScript` 脚本文件；

+ 生成、更新 `HTML5` 应用缓存清单文件；

> 确保开发活动中在无论线上亦或线下的 `HTML`, `CSS`, `JavaScript`, `字体`, `图片` 等资源环境下都可以有效进行

> 确保某些任务可以按指定序列同步执行

> 只处理被修改过的 `Jade`, `Sass`, `CoffeeScript` 文件

> 使用外部配置文件（ `config.json` ）

> 从命令行传输参数

> 使得在一个任务中可以使用复合源

> 将每一个任务的多个管道按相关规则独立出来，注重管道的重用






## Contributors List

## License































